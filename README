Question 1:

run the program by typing "./ttt 123456789"

- the alien will be first to play
- if it will print "I win", the alien won.
- if it will print "I lose", the human won.



Question 2:

run the program by typing "./mync -e "./ttt 123456789""

- the program will excute the ttt program and play the game with the alien.



Question 3:

a few options to run the program - 
1. run the program by typing "./mync -e "./ttt 123456789" -i TCPS4050" - this will run the program and get the input from port 4050.
2. run the program by typing "./mync -e "./ttt 123456789" -o TCPS4050" - this will run the program and send the output to port 4050.
3. run the program by typing "./mync -e "./ttt 123456789" -b TCPS4050" - this will run the program and get the input and send the output on port 4050.
4. run the program by typing "./mync -e "./ttt 123456789" -i TCPS4050 -o TCPC4455" - this will run the program and get the input from port 4050 and send the output to port 4455.
  1- clear;./mync -i TCPS4050
  2- make;clear;./mync -e "./ttt 123456789" -i TCPS4455 -o TCPClocalhost,4050
  3- clear;./mync -o TCPClocalhost,4455

Question 3.5:

- if there is no "-e "./ttt 123456789"" in the command, the program will act as a simple netcat program.

- make;clear;./mync -i TCPS4050
- clear;./mync -o TCPC4050



Question 4:

*** the program is not working as expected. ***
# need to continue working on 3.5
# 3.5 should work as a regular netcat program
# the problem we have is the close at the end of the tcp server
# need to create some kind of flag/msg to tell when to close the connection

Question 6:

# UDS
    # stream
        # stream server
        ./mync -e "./ttt 123456789" -i UDSSS/tmp/my_stream_socket
        ./mync -e "./ttt 123456789" -o UDSSS/tmp/my_stream_socket
        ./mync -e "./ttt 123456789" -b UDSSD/tmp/my_stream_socket
        # stream client
        ./mync -e "./ttt 123456789" -i UDSCS/tmp/my_stream_socket
        ./mync -e "./ttt 123456789" -o UDSCS/tmp/my_stream_socket
        ./mync -e "./ttt 123456789" -b UDSCD/tmp/my_stream_socket
    
    # datagram
        # datagram server (only -i is possible)
        ./mync -e "./ttt 123456789" -i UDSSD/tmp/my_datagram_socket

        # datagram client (only -o is possible)
        ./mync -e "./ttt 123456789" -o UDSCD/tmp/my_datagram_socket

testing:
case 1:
  termian 1:
  make;clear;./mync -e "./ttt 123456789" -i UDSSS/tmp/my_stream_socket
  terminal 2:
  clear;./mync -o UDSCS/tmp/my_stream_socket

*** fix ***
# need to fix the close at the end of the tcp server
# need to create some kind of flag/msg to tell when to close the connection